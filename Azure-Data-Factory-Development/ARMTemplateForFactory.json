{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Azure-Data-Factory-Development"
		},
		"AzureDataLakeStorage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage'"
		},
		"AzureTableStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureTableStorage'"
		},
		"Log_LinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Log_LinkedService'"
		},
		"SQL Database Connection_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQL Database Connection'"
		},
		"AzureDataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azuredatalake2nishant.dfs.core.windows.net"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://NishantAzureKeyVault.vault.azure.net/"
		},
		"trigger1_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0f32e670-d05c-4bda-be1b-936991e7ab14/resourceGroups/DataFactory_ResourceGroup/providers/Microsoft.Storage/storageAccounts/azuredatalake2nishant"
		},
		"Integration-Runtime-SSIS_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint": {
			"type": "string",
			"defaultValue": "azuresqlserver-nishant.database.windows.net"
		},
		"Integration-Runtime-SSIS_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName": {
			"type": "string",
			"defaultValue": "IBM_ADMIN"
		},
		"Integration-Runtime-SSIS_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword": {
			"type": "secureString"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Archive_Delete_File')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Archive_File",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CSV_DataSet_Demo_Demo",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Archival_Path",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Archive_File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CSV_DataSet_Demo_Demo",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "Log_LinkedService",
									"type": "LinkedServiceReference"
								},
								"path": "demo/Log"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CSV_DataSet_Demo_Demo')]",
				"[concat(variables('factoryId'), '/datasets/Archival_Path')]",
				"[concat(variables('factoryId'), '/linkedServices/Log_LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy Data Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Create_Process_ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 0
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"redirectIncompatibleRowSettings": {
								"linkedServiceName": {
									"referenceName": "Log_LinkedService",
									"type": "LinkedServiceReference"
								},
								"path": "demo/demo"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Series_reference",
											"type": "String"
										},
										"sink": {
											"name": "Series_reference",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Period",
											"type": "String"
										},
										"sink": {
											"name": "Period",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Data_value",
											"type": "String"
										},
										"sink": {
											"name": "Data_value",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UNITS",
											"type": "String"
										},
										"sink": {
											"name": "UNITS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Subject",
											"type": "String"
										},
										"sink": {
											"name": "Subject",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Group",
											"type": "String"
										},
										"sink": {
											"name": "Group",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Series_title_1",
											"type": "String"
										},
										"sink": {
											"name": "Series_title_1",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_DataSet_Demo_Demo",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_DataSet_Demo",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy_data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceIgnoreTableNotFound": false
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "AzureTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_DataSet_Table_Demo",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Load Copy Data Failure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Copy_data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send email on failure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "nitaneja@in.ibm.com",
								"Activity": {
									"value": "Copy Data",
									"type": "Expression"
								},
								"ErrorMessage": {
									"value": "@activity('Copy_data').Error.Message",
									"type": "Expression"
								},
								"Name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Create_Process_ID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[p_process]",
								"storedProcedureParameters": {
									"cdatafactoryname": {
										"type": "String",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									},
									"cdtend": {
										"type": "DateTime",
										"value": null
									},
									"cdtstart": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									},
									"ckprocess": {
										"type": "Int32",
										"value": null
									},
									"cpipelinename": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"cstatus": {
										"type": "String",
										"value": "R"
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "Azure_SqlTable",
								"type": "DatasetReference",
								"parameters": {
									"UserName": {
										"value": "@pipeline().parameters.UserName",
										"type": "Expression"
									},
									"Password": {
										"value": "@pipeline().parameters.Password",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Fail p_process procedure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[p_process]",
							"storedProcedureParameters": {
								"cdatafactoryname": {
									"value": null,
									"type": "String"
								},
								"cdtend": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"cdtstart": {
									"value": null,
									"type": "DateTime"
								},
								"ckprocess": {
									"value": {
										"value": "@activity('Create_Process_ID').output.firstRow.CKProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"cpipelinename": {
									"value": null,
									"type": "String"
								},
								"cstatus": {
									"value": "E",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL Database Connection",
							"type": "LinkedServiceReference",
							"parameters": {
								"SQL User Name": {
									"value": "@pipeline().parameters.UserName",
									"type": "Expression"
								},
								"SQL Password": {
									"value": "@pipeline().parameters.Password",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Fail p_process_procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_data1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[p_process]",
							"storedProcedureParameters": {
								"cdatafactoryname": {
									"value": null,
									"type": "String"
								},
								"cdtend": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"cdtstart": {
									"value": null,
									"type": "DateTime"
								},
								"ckprocess": {
									"value": {
										"value": "@activity('Create_Process_ID').output.firstRow.CKProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"cpipelinename": {
									"value": null,
									"type": "String"
								},
								"cstatus": {
									"value": {
										"value": "E",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL Database Connection",
							"type": "LinkedServiceReference",
							"parameters": {
								"SQL User Name": {
									"value": "@pipeline().parameters.UserName",
									"type": "Expression"
								},
								"SQL Password": {
									"value": "@pipeline().parameters.Password",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "File_Archival",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Copy_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Archive_Delete_File",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"parameters": {
					"UserName": {
						"type": "string",
						"defaultValue": "sunildp200"
					},
					"Password": {
						"type": "string",
						"defaultValue": "Welcome2IBM"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CSV_DataSet_Demo_Demo')]",
				"[concat(variables('factoryId'), '/datasets/CSV_DataSet_Demo')]",
				"[concat(variables('factoryId'), '/datasets/AzureTable')]",
				"[concat(variables('factoryId'), '/datasets/CSV_DataSet_Table_Demo')]",
				"[concat(variables('factoryId'), '/pipelines/Send email on failure')]",
				"[concat(variables('factoryId'), '/datasets/Azure_SqlTable')]",
				"[concat(variables('factoryId'), '/linkedServices/SQL Database Connection')]",
				"[concat(variables('factoryId'), '/pipelines/Archive_Delete_File')]",
				"[concat(variables('factoryId'), '/linkedServices/Log_LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Process log SP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Call p_process procedure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[p_process]",
							"storedProcedureParameters": {
								"cdatafactoryname": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"cdtend": {
									"value": null,
									"type": "DateTime"
								},
								"cdtstart": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ckprocess": {
									"value": null,
									"type": "Int32"
								},
								"cpipelinename": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"cstatus": {
									"value": "R",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL Database Connection",
							"type": "LinkedServiceReference",
							"parameters": {
								"SQL User Name": {
									"value": "@pipeline().parameters.UserName",
									"type": "Expression"
								},
								"SQL Password": {
									"value": "@pipeline().parameters.Password",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Call p_process procedure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select max(ckprocess) as CKProcessID from tprocess(nolock)",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "Azure_SqlTable",
								"type": "DatasetReference",
								"parameters": {
									"UserName": {
										"value": "@pipeline().parameters.UserName",
										"type": "Expression"
									},
									"Password": {
										"value": "@pipeline().parameters.Password",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ckProcessID",
							"value": {
								"value": "@string(activity('Lookup1').output.firstRow)",
								"type": "Expression"
							}
						}
					}
				],
				"concurrency": 1,
				"parameters": {
					"UserName": {
						"type": "string",
						"defaultValue": "sunildp200"
					},
					"Password": {
						"type": "string",
						"defaultValue": "Welcome2IBM"
					}
				},
				"variables": {
					"ckProcessID": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL Database Connection')]",
				"[concat(variables('factoryId'), '/datasets/Azure_SqlTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Send email on failure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Send email on failure",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-43.eastus.logic.azure.com:443/workflows/c284585c8d874750b008f9dfdf03db47/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=uJ_0r6n7qhtXyFb-5lD3E4KMoasbeJo9Y-4e1XiOtjU",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n\"EmailTo\":\"@{pipeline().parameters.EmailTo}\",\n\"Subject\":\"An error has occured in @{pipeline().parameters.Name}-pipeline\",\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"PipelineName\": \"@{pipeline().parameters.Name}\",\n\"Activity\": \"@{pipeline().parameters.Activity}\",\n\"ErrorMessage\": \"@{pipeline().parameters.ErrorMessage}\"\n}\n",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"EmailTo": {
						"type": "string",
						"defaultValue": "nitaneja@in.ibm.com"
					},
					"Activity": {
						"type": "string",
						"defaultValue": "Copy Data"
					},
					"ErrorMessage": {
						"type": "string",
						"defaultValue": "Test"
					},
					"Name": {
						"type": "string",
						"defaultValue": "ABC"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Archival_Path')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('consumers-price-index-',utcnow())",
							"type": "Expression"
						},
						"folderPath": "demo/Archive",
						"fileSystem": "demo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureTableStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureTable",
				"schema": [],
				"typeProperties": {
					"tableName": "MailData9Apr2020"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureTableStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure_SqlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL Database Connection",
					"type": "LinkedServiceReference",
					"parameters": {
						"SQL User Name": {
							"value": "@dataset().UserName",
							"type": "Expression"
						},
						"SQL Password": {
							"value": "@dataset().Password",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"UserName": {
						"type": "string"
					},
					"Password": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "tprocess"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL Database Connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_DataSet_Demo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('consumers-price-index-',utcnow())",
							"type": "Expression"
						},
						"fileSystem": "demo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Series_reference",
						"type": "String"
					},
					{
						"name": "Period",
						"type": "String"
					},
					{
						"name": "Data_value",
						"type": "String"
					},
					{
						"name": "STATUS",
						"type": "String"
					},
					{
						"name": "UNITS",
						"type": "String"
					},
					{
						"name": "Subject",
						"type": "String"
					},
					{
						"name": "Group",
						"type": "String"
					},
					{
						"name": "Series_title_1",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_DataSet_Demo_Demo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "consumers-price-index-December19-index-numbers-csv-tables.csv",
						"folderPath": "demo",
						"fileSystem": "demo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Series_reference",
						"type": "String"
					},
					{
						"name": "Period",
						"type": "String"
					},
					{
						"name": "Data_value",
						"type": "String"
					},
					{
						"name": "STATUS",
						"type": "String"
					},
					{
						"name": "UNITS",
						"type": "String"
					},
					{
						"name": "Subject",
						"type": "String"
					},
					{
						"name": "Group",
						"type": "String"
					},
					{
						"name": "Series_title_1",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_DataSet_Table_Demo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('Table_Storage',utcnow())",
							"type": "Expression"
						},
						"fileSystem": "demo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Series_reference",
						"type": "String"
					},
					{
						"name": "Period",
						"type": "String"
					},
					{
						"name": "Data_value",
						"type": "String"
					},
					{
						"name": "STATUS",
						"type": "String"
					},
					{
						"name": "UNITS",
						"type": "String"
					},
					{
						"name": "Subject",
						"type": "String"
					},
					{
						"name": "Group",
						"type": "String"
					},
					{
						"name": "Series_title_1",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureTableStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureTableStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Log_LinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Log_LinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL Database Connection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"SQL User Name": {
						"type": "string"
					},
					"SQL Password": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SQL Database Connection_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Copy Data Pipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/demo/blobs/demo/consumers-price-index-December19-index-numbers-csv-tables.csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger1_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Copy Data Pipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Integration-Runtime-SSIS')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "Central US",
						"nodeSize": "Standard_D8_v3",
						"numberOfNodes": 2,
						"maxParallelExecutionsPerNode": 1
					},
					"ssisProperties": {
						"catalogInfo": {
							"catalogServerEndpoint": "[parameters('Integration-Runtime-SSIS_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint')]",
							"catalogAdminUserName": "[parameters('Integration-Runtime-SSIS_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName')]",
							"catalogAdminPassword": {
								"type": "SecureString",
								"value": "[parameters('Integration-Runtime-SSIS_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword')]"
							},
							"catalogPricingTier": "S1"
						},
						"edition": "Standard",
						"licenseType": "BasePrice"
					}
				}
			},
			"dependsOn": []
		}
	]
}